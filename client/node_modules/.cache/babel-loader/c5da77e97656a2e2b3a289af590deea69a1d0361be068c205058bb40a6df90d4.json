{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n//import { composeWithDevTools } from \"redux-devtools-extension \";\n\nimport { getProductsReducer } from \"./reducers/productReducer\";\nconst reducer = combineReducers({\n  getProducts: getProductsReducer\n});\nconst middleware = [thunk];\nconst store = createStore(reducer\n//composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","getProductsReducer","reducer","getProducts","middleware","store"],"sources":["D:/Projects/Flipkart clone/client/src/redux/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n//import { composeWithDevTools } from \"redux-devtools-extension \";\r\n\r\nimport { getProductsReducer } from \"./reducers/productReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  getProducts: getProductsReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer\r\n  //composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B;;AAEA,SAASC,kBAAkB,QAAQ,2BAA2B;AAE9D,MAAMC,OAAO,GAAGJ,eAAe,CAAC;EAC9BK,WAAW,EAAEF;AACf,CAAC,CAAC;AAEF,MAAMG,UAAU,GAAG,CAACJ,KAAK,CAAC;AAE1B,MAAMK,KAAK,GAAGR,WAAW,CACvBK;AACA;AAAA,CACD;;AAED,eAAeG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}