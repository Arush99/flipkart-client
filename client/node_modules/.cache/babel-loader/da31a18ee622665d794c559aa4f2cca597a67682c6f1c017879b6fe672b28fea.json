{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Flipkart clone\\\\client\\\\src\\\\components\\\\header\\\\Search.jsx\",\n  _s = $RefreshSig$();\n//import styled from \"@emotion/styled/types/base\";\nimport { useState, useEffect } from \"react\";\nimport { InputBase, Box, styled } from \"@mui/material\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getProducts } from \"../../redux/actions/productActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContainer = styled(Box)`\n   background: #fff;\n   width: 38%;\n   border-radius: 2px;\n   margin-left: 10px;\n   display:flex;\n`;\n_c = SearchContainer;\nconst InoutSearchBase = styled(InputBase)`\n    padding-left: 20px;\n    width: 100%;\n    font-size: unset;\n`;\n_c2 = InoutSearchBase;\nconst SearchIconWrapper = styled(Box)`\n      color: blue;\n      padding: 5px;\n`;\n_c3 = SearchIconWrapper;\nconst Search = () => {\n  _s();\n  const [text, setText] = useState('');\n  const {\n    products\n  } = useSelector(state => state.getProducts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch;\n  }, [dispatch]);\n  const getText = () => {\n    setText(text);\n  };\n  return /*#__PURE__*/_jsxDEV(SearchContainer, {\n    children: [/*#__PURE__*/_jsxDEV(InoutSearchBase, {\n      placeholder: \"Search for products,brands and more\",\n      onChange: () => getText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchIconWrapper, {\n      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), text && /*#__PURE__*/_jsxDEV(List, {\n      children: products.filter(product => product.title.longTitle)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"SzNwSPKS+MpJBPaeRWmU98R3Ams=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c4 = Search;\nexport default Search;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SearchContainer\");\n$RefreshReg$(_c2, \"InoutSearchBase\");\n$RefreshReg$(_c3, \"SearchIconWrapper\");\n$RefreshReg$(_c4, \"Search\");","map":{"version":3,"names":["useState","useEffect","InputBase","Box","styled","SearchIcon","useSelector","useDispatch","getProducts","SearchContainer","InoutSearchBase","SearchIconWrapper","Search","text","setText","products","state","dispatch","getText","e","target","value","filter","product","title","longTitle"],"sources":["D:/Projects/Flipkart clone/client/src/components/header/Search.jsx"],"sourcesContent":["\r\n//import styled from \"@emotion/styled/types/base\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { InputBase, Box, styled } from \"@mui/material\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getProducts } from \"../../redux/actions/productActions\";\r\n\r\nconst SearchContainer = styled(Box)`\r\n   background: #fff;\r\n   width: 38%;\r\n   border-radius: 2px;\r\n   margin-left: 10px;\r\n   display:flex;\r\n`;\r\n\r\nconst InoutSearchBase = styled(InputBase)`\r\n    padding-left: 20px;\r\n    width: 100%;\r\n    font-size: unset;\r\n`;\r\n\r\nconst SearchIconWrapper = styled(Box)`\r\n      color: blue;\r\n      padding: 5px;\r\n`;\r\n\r\nconst Search = () => {\r\n    const [ text, setText] = useState('');\r\n\r\n    const { products } = useSelector(state => state.getProducts);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch\r\n    }, [dispatch])\r\n    const getText = () => {\r\n        setText(text);\r\n    }\r\n    return(\r\n        \r\n        <SearchContainer>\r\n            <InoutSearchBase\r\n                placeholder=\"Search for products,brands and more\"\r\n                onChange = {() => getText(e.target.value)}\r\n            />\r\n            <SearchIconWrapper>\r\n                <SearchIcon/>\r\n                </SearchIconWrapper>\r\n            {\r\n                text && \r\n                    <List>\r\n                        {\r\n                            products.filter(product => product.title.longTitle)\r\n                        }\r\n                        \r\n                    </List>\r\n            }\r\n        </SearchContainer>\r\n        \r\n    )\r\n}\r\n\r\nexport default Search;"],"mappings":";;AACA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,GAAG,EAAEC,MAAM,QAAQ,eAAe;AACtD,OAAOC,UAAU,MAAM,4BAA4B;AAEnD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,oCAAoC;AAAC;AAEjE,MAAMC,eAAe,GAAGL,MAAM,CAACD,GAAG,CAAE;AACpC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KANIM,eAAe;AAQrB,MAAMC,eAAe,GAAGN,MAAM,CAACF,SAAS,CAAE;AAC1C;AACA;AACA;AACA,CAAC;AAAC,MAJIQ,eAAe;AAMrB,MAAMC,iBAAiB,GAAGP,MAAM,CAACD,GAAG,CAAE;AACtC;AACA;AACA,CAAC;AAAC,MAHIQ,iBAAiB;AAKvB,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAM;IAAEe;EAAS,CAAC,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACR,WAAW,CAAC;EAC5D,MAAMS,QAAQ,GAAGV,WAAW,EAAE;EAC9BN,SAAS,CAAC,MAAM;IACZgB,QAAQ;EACZ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EACd,MAAMC,OAAO,GAAG,MAAM;IAClBJ,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC;EACD,oBAEI,QAAC,eAAe;IAAA,wBACZ,QAAC,eAAe;MACZ,WAAW,EAAC,qCAAqC;MACjD,QAAQ,EAAI,MAAMK,OAAO,CAACC,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC5C,eACF,QAAC,iBAAiB;MAAA,uBACd,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACO,EAEpBR,IAAI,iBACA,QAAC,IAAI;MAAA,UAEGE,QAAQ,CAACO,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,KAAK,CAACC,SAAS;IAAC;MAAA;MAAA;MAAA;IAAA,QAGpD;EAAA;IAAA;IAAA;IAAA;EAAA,QAED;AAG1B,CAAC;AAAA,GAjCKb,MAAM;EAAA,QAGaN,WAAW,EACfC,WAAW;AAAA;AAAA,MAJ1BK,MAAM;AAmCZ,eAAeA,MAAM;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}